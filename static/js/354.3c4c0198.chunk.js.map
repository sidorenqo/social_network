{"version":3,"file":"static/js/354.3c4c0198.chunk.js","mappings":"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","sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__FtKtd\"};","import React, { useEffect, useState } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\t\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\tconst [status, setStatus] = useState(props.status)\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\t\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\t\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}></input>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/preloader/Preloader\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.descriptionBlock}>avatar</div>\r\n\t\t\t<img src={profile.photos.large} alt=\"\" />\r\n\t\t\t<ProfileStatusWithHooks updateStatus={updateStatus} status={status} />\r\n\t\t\r\n\t\t</div>\r\n\t\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__fKEbK\",\"posts\":\"MyPosts_posts__PWcwf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Fj3QU\"};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src='https://shapka-youtube.ru/wp-content/uploads/2020/08/man-silhouette.jpg'></img>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Лайк</span> {props.likesCount}\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post","import React from \"react\"\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\"\r\nimport { Field, Form, Formik } from \"formik\"\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\t\r\n\t\r\n\tlet postsElements =\r\n\t\tprops.posts.map(p => (<Post message={p.message} likesCount={p.likesCount} />))\r\n\t\r\n\tlet newPostElement = React.createRef()\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.postsBlock}>\r\n\t\t\t\t<h3>MY POST</h3>\r\n\t\t\t\t<AddNewPostForm onAddPost={props.onAddPost} />\r\n\t\t\t\t<div className={classes.posts}>\r\n\t\t\t\t\t{postsElements}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n\t\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tnewPostText: \"\"\r\n\t\t\t}}\r\n\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\tonAddPost(values.newPostText)\r\n\t\t\t\tresetForm({ values: \"\" })\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{() => (\r\n\t\t\t\t<Form onSubmit={props.handleSubmit}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field name={\"newPostText\"} component=\"textarea\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button>ADD POST</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t)\r\n}\r\n\r\n\r\nexport default MyPosts","import { addPostActionCreator } from \"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from \"react\"\r\nimport ProfileInfo from \"./Profileinfo/Profileinfo\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\n\r\nconst Profile = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t\t{/*<MyPostsContainer store={props.store} />*/}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\"\r\nimport { connect } from \"react-redux\"\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\"\r\nimport { compose } from \"redux\"\r\n\r\nclass ProfileContainer extends React.Component {\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.router.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = 30685\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props}\r\n\t\t\t\t         profile={this.props.profile}\r\n\t\t\t\t         status={this.props.status}\r\n\t\t\t\t         updateStatus={this.props.updateStatus} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status\r\n})\r\n\r\n\r\nfunction withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet location = useLocation()\r\n\t\tlet navigate = useNavigate()\r\n\t\tlet params = useParams()\r\n\t\treturn (\r\n\t\t\t<Component\r\n\t\t\t\t{...props}\r\n\t\t\t\trouter={{ location, navigate, params }}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn ComponentWithRouterProp\r\n}\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n\twithRouter\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","updateStatus","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","_ref","profile","className","classes","src","photos","large","alt","ProfileStatusWithHooks","Preloader","message","likesCount","MyPosts","React","postsElements","posts","map","p","Post","AddNewPostForm","onAddPost","Formik","initialValues","newPostText","onSubmit","values","resetForm","addPost","Form","handleSubmit","Field","name","component","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","getUserProfile","getStatus","render","Profile","compose","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}