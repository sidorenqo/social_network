{"version":3,"file":"static/js/897.c1948e81.chunk.js","mappings":"yJACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0B,qBCG7K,MAUA,EAVoBA,IACnB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAECC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAc,KAAAD,OAAIC,GAAiBC,UACrDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKM,SAAEP,EAAMU,QACrB,ECCR,EAPiBV,IAEfG,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAeC,SAAEP,EAAMW,U,aCCzC,MA8BMC,EAAkBZ,IAStBG,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACNC,cAAe,CACdC,eAAgB,IAEjBC,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAXbD,KAEpBjB,EAAMoB,YAAYH,EAAO,EAUvBI,CAAcJ,EAAOF,gBACrBI,EAAU,CAAEF,OAAQ,IAAK,EAEzBV,SAEAA,KACAe,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAhB,SAAA,EACJJ,EAAAA,EAAAA,KAAA,OAAAI,UACCJ,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACLd,KAAM,iBACNe,GAAI,WACJC,YAAa,kBAIfvB,EAAAA,EAAAA,KAAA,UAAQwB,KAAM,SAASpB,SAAC,eAM7B,EAjEiBP,IAEhB,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EACHF,EAAMG,QAAQC,KAAIC,IAAM9B,EAAAA,EAAAA,KAAC+B,EAAU,CAACxB,KAAMuB,EAAEvB,KAAiBR,GAAI+B,EAAE/B,IAAZ+B,EAAE/B,MAEtDiC,EACHP,EAAMQ,SAASJ,KAAIK,IAAMlC,EAAAA,EAAAA,KAACmC,EAAO,CAAC3B,QAAS0B,EAAE1B,SAAc0B,EAAEnC,MAI7D0B,EAAMb,eAGP,OACCO,EAAAA,EAAAA,MAAA,OAAKlB,UAAWE,EAAgBC,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAqBC,SACnCuB,KAEF3B,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAiBC,UAChCJ,EAAAA,EAAAA,KAAA,OAAAI,SAAM4B,OAEPhC,EAAAA,EAAAA,KAACS,EAAc,CAACQ,YAAapB,EAAMoB,gBAC9B,ECXR,SAAemB,E,OAAAA,KACdC,EAAAA,EAAAA,KAfsBZ,IACf,CACNC,YAAaD,EAAMC,gBAIKY,IAClB,CACNrB,YAAcL,IACb0B,GAASC,EAAAA,EAAAA,GAAmB3B,GAAgB,MAK/C,CAEE4B,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogitem/Dialogitem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__NDlyu\",\"dialogsItems\":\"Dialogs_dialogsItems__06E9Y\",\"dialog\":\"Dialogs_dialog__p2hjx\",\"active\":\"Dialogs_active__DAcWd\",\"messages\":\"Dialogs_messages__0RTCH\",\"message\":\"Dialogs_message__kyV0A\"};","import React from \"react\"\r\nimport classes from \"./../Dialogs.module.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialog/1\" + props.id\r\n\treturn (\r\n\t\t\r\n\t\t<div className={`${classes.dialog} ${classes.active}`}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem","import React from \"react\"\r\nimport classes from \"./../Dialogs.module.css\"\r\n\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.dialog}>{props.message}</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Message","import React from \"react\"\r\nimport classes from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./Dialogitem/Dialogitem\"\r\nimport Message from \"./Message/Message\"\r\nimport { Field, Form, Formik } from \"formik\"\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\t\r\n\tlet state = props.dialogsPage\r\n\t\r\n\tlet dialogsElements =\r\n\t\tstate.dialogs.map(d => (<DialogItem name={d.name} key={d.id} id={d.id} />))\r\n\t\r\n\tlet messageElement =\r\n\t\tstate.messages.map(m => (<Message message={m.message} key={m.id} />)\r\n\t\t)\r\n\t\r\n\tlet newMessageBody =\r\n\t\tstate.newMessageBody\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div>{messageElement}</div>\r\n\t\t\t</div>\r\n\t\t\t<AddMassageForm sendMessage={props.sendMessage} />\r\n\t\t</div>\r\n\t\r\n\t)\r\n}\r\n\r\n//\r\nconst AddMassageForm = (props) => {\r\n\t\r\n\tlet addNewMessage = (values) => {\r\n\t\t\r\n\t\tprops.sendMessage(values)\r\n\t\t\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tnewMessageBody: \"\"\r\n\t\t\t}}\r\n\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\taddNewMessage(values.newMessageBody)\r\n\t\t\t\tresetForm({ values: \"\" })\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{() => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname={\"newMessageBody\"}\r\n\t\t\t\t\t\t\tas={\"textarea\"}\r\n\t\t\t\t\t\t\tplaceholder={\"enter text\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button type={\"submit\"}>Send2</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t)\r\n}\r\nexport default Dialogs","import { sendMessageCreator } from \"../../redux/dialogs-reducer\"\r\nimport { connect } from \"react-redux\"\r\nimport Dialogs from \"./Dialogs\"\r\nimport { compose } from \"redux\"\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)"],"names":["props","path","id","_jsx","className","concat","classes","children","NavLink","to","name","message","AddMassageForm","Formik","initialValues","newMessageBody","onSubmit","values","_ref","resetForm","sendMessage","addNewMessage","_jsxs","Form","Field","as","placeholder","type","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messageElement","messages","m","Message","compose","connect","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}